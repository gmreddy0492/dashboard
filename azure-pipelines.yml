trigger:
- '*'

pr:
- '*'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: pylint
  jobs:
  - job: pylint
    displayName: 'pylint Stage'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        cd application
        pylint --load-plugins pylint_django --django-settings-module=core.settings **/*.py
      displayName: 'Setup Virtual Environment and Run pylint'
      continueOnError: true # Continue with the next steps even if pylint fails
- stage: BuildandPackage
  dependsOn:  pylint
  jobs:
  - job: Buildandpackage
    displayName: 'Build and package Stage'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        python -m venv venv
        source venv/bin/activate
        pip install -r requirements.txt
        cd application
      displayName: 'Setup Virtual Environment and Run pylint'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
        replaceExistingArchive: true
        verbose: # (no value); this input is optional
    - publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop


    

